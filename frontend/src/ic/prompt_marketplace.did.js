export const idlFactory = ({ IDL }) => {
  const Time = IDL.Int;
  const OnChainRecord = IDL.Record({
    'id' : IDL.Nat,
    'itemId' : IDL.Nat,
    'contentHash' : IDL.Text,
    'licenseTerms' : IDL.Text,
    'isVerified' : IDL.Bool,
    'timestamp' : Time,
    'royaltyPercent' : IDL.Nat,
    'ownerWallet' : IDL.Principal,
  });
  const VerificationResult = IDL.Record({
    'hashMatch' : IDL.Bool,
    'isVerified' : IDL.Bool,
    'message' : IDL.Text,
    'onChainRecord' : IDL.Opt(OnChainRecord),
  });
  const Error = IDL.Variant({
    'InvalidRating' : IDL.Null,
    'InvalidInput' : IDL.Null,
    'DuplicateContent' : IDL.Null,
    'InsufficientBalance' : IDL.Null,
    'NotFound' : IDL.Null,
    'NotAuthorized' : IDL.Null,
    'VerificationFailed' : IDL.Null,
    'AlreadyFavorited' : IDL.Null,
    'HashMismatch' : IDL.Null,
    'AlreadyLicensed' : IDL.Null,
    'NotFavorited' : IDL.Null,
    'InternalError' : IDL.Null,
  });
  const Result_1 = IDL.Variant({ 'ok' : IDL.Nat, 'err' : Error });
  const TransactionStatus = IDL.Variant({
    'pending' : IDL.Null,
    'completed' : IDL.Null,
    'failed' : IDL.Null,
  });
  const Transaction = IDL.Record({
    'id' : IDL.Nat,
    'status' : TransactionStatus,
    'itemId' : IDL.Nat,
    'createdAt' : Time,
    'seller' : IDL.Principal,
    'processedAt' : IDL.Opt(Time),
    'buyer' : IDL.Principal,
    'amount' : IDL.Nat64,
  });
  const Category = IDL.Record({
    'id' : IDL.Nat,
    'name' : IDL.Text,
    'description' : IDL.Text,
    'itemType' : IDL.Text,
  });
  const Comment = IDL.Record({
    'id' : IDL.Nat,
    'itemId' : IDL.Nat,
    'content' : IDL.Text,
    'createdAt' : Time,
    'author' : IDL.Principal,
    'updatedAt' : Time,
    'rating' : IDL.Nat,
  });
  const Favorite = IDL.Record({
    'id' : IDL.Nat,
    'itemId' : IDL.Nat,
    'createdAt' : Time,
    'user' : IDL.Principal,
  });
  const Item = IDL.Record({
    'id' : IDL.Nat,
    'totalRatings' : IDL.Nat,
    'title' : IDL.Text,
    'contentFileName' : IDL.Text,
    'content' : IDL.Text,
    'contentHash' : IDL.Text,
    'owner' : IDL.Principal,
    'metadata' : IDL.Text,
    'createdAt' : Time,
    'licensedWallets' : IDL.Vec(IDL.Principal),
    'description' : IDL.Text,
    'contentFileKey' : IDL.Text,
    'licenseTerms' : IDL.Text,
    'averageRating' : IDL.Float64,
    'updatedAt' : Time,
    'isVerified' : IDL.Bool,
    'thumbnailImages' : IDL.Vec(IDL.Text),
    'contentRetrievalUrl' : IDL.Text,
    'itemType' : IDL.Text,
    'category' : IDL.Text,
    'comments' : IDL.Vec(Comment),
    'price' : IDL.Nat,
    'royaltyPercent' : IDL.Nat,
  });
  const ItemDetail = IDL.Record({
    'id' : IDL.Nat,
    'totalRatings' : IDL.Nat,
    'title' : IDL.Text,
    'contentFileName' : IDL.Text,
    'contentHash' : IDL.Text,
    'owner' : IDL.Principal,
    'metadata' : IDL.Text,
    'createdAt' : Time,
    'licensedWallets' : IDL.Vec(IDL.Principal),
    'description' : IDL.Text,
    'contentFileKey' : IDL.Text,
    'licenseTerms' : IDL.Text,
    'averageRating' : IDL.Float64,
    'updatedAt' : Time,
    'isVerified' : IDL.Bool,
    'thumbnailImages' : IDL.Vec(IDL.Text),
    'contentRetrievalUrl' : IDL.Text,
    'itemType' : IDL.Text,
    'category' : IDL.Text,
    'comments' : IDL.Vec(Comment),
    'price' : IDL.Nat,
    'royaltyPercent' : IDL.Nat,
  });
  const License = IDL.Record({
    'id' : IDL.Nat,
    'itemId' : IDL.Nat,
    'createdAt' : Time,
    'isActive' : IDL.Bool,
    'licenseTerms' : IDL.Text,
    'updatedAt' : Time,
    'expiration' : IDL.Opt(Time),
    'buyer' : IDL.Principal,
  });
  const User = IDL.Record({
    'bio' : IDL.Opt(IDL.Text),
    'principal' : IDL.Principal,
    'balance' : IDL.Nat,
    'createdAt' : Time,
    'rate' : IDL.Opt(IDL.Nat),
    'updatedAt' : Time,
    'lastName' : IDL.Opt(IDL.Text),
    'firstName' : IDL.Opt(IDL.Text),
  });
  const PlatformConfig = IDL.Record({ 'platformFeePercent' : IDL.Nat });
  const View = IDL.Record({
    'id' : IDL.Nat,
    'itemId' : IDL.Nat,
    'createdAt' : Time,
    'viewer' : IDL.Principal,
  });
  const Result = IDL.Variant({ 'ok' : IDL.Nat64, 'err' : Error });
  const PromptMarketplace = IDL.Service({
    'add_comment' : IDL.Func(
        [IDL.Nat, IDL.Text, IDL.Nat],
        [IDL.Opt(IDL.Nat)],
        [],
      ),
    'add_favorite' : IDL.Func([IDL.Nat], [IDL.Opt(IDL.Nat)], []),
    'add_view' : IDL.Func([IDL.Nat], [IDL.Nat], []),
    'batch_verify_items' : IDL.Func(
        [IDL.Vec(IDL.Nat), IDL.Vec(IDL.Text)],
        [IDL.Vec(VerificationResult)],
        ['query'],
      ),
    'check_content_duplicate' : IDL.Func([IDL.Text], [IDL.Bool], ['query']),
    'check_item_license' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'create_item_for_user' : IDL.Func(
        [
          IDL.Principal,
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Nat,
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Nat,
          IDL.Vec(IDL.Text),
          IDL.Text,
          IDL.Text,
          IDL.Text,
        ],
        [Result_1],
        [],
      ),
    'deactivate_license' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'finalize_purchase' : IDL.Func([IDL.Nat], [Result_1], []),
    'get_all_transactions' : IDL.Func([], [IDL.Vec(Transaction)], ['query']),
    'get_balance' : IDL.Func([], [IDL.Opt(IDL.Nat)], []),
    'get_canister_icp_balance' : IDL.Func([], [IDL.Nat64], []),
    'get_canister_principal' : IDL.Func([], [IDL.Principal], ['query']),
    'get_categories' : IDL.Func(
        [IDL.Opt(IDL.Text)],
        [IDL.Vec(Category)],
        ['query'],
      ),
    'get_comments_by_item' : IDL.Func([IDL.Nat], [IDL.Vec(Comment)], ['query']),
    'get_comments_by_user' : IDL.Func(
        [IDL.Principal],
        [IDL.Vec(Comment)],
        ['query'],
      ),
    'get_content_hash' : IDL.Func([IDL.Text], [IDL.Text], ['query']),
    'get_creator_payment' : IDL.Func([IDL.Nat], [IDL.Nat], ['query']),
    'get_effective_platform_wallet' : IDL.Func([], [IDL.Principal], ['query']),
    'get_favorite_count' : IDL.Func([IDL.Nat], [IDL.Nat], ['query']),
    'get_favorites_by_item' : IDL.Func(
        [IDL.Nat],
        [IDL.Vec(Favorite)],
        ['query'],
      ),
    'get_featured_items' : IDL.Func(
        [IDL.Text, IDL.Nat],
        [IDL.Vec(Item)],
        ['query'],
      ),
    'get_icp_balance' : IDL.Func([], [IDL.Nat64], []),
    'get_item_by_content_hash' : IDL.Func(
        [IDL.Text],
        [IDL.Opt(OnChainRecord)],
        ['query'],
      ),
    'get_item_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_item_detail' : IDL.Func([IDL.Nat], [IDL.Opt(ItemDetail)], ['query']),
    'get_item_types' : IDL.Func([], [IDL.Vec(IDL.Text)], ['query']),
    'get_items' : IDL.Func([], [IDL.Vec(Item)], ['query']),
    'get_items_by_category' : IDL.Func([IDL.Text], [IDL.Vec(Item)], ['query']),
    'get_items_by_owner' : IDL.Func([], [IDL.Vec(Item)], []),
    'get_items_by_type' : IDL.Func([IDL.Text], [IDL.Vec(Item)], ['query']),
    'get_items_by_type_paginated' : IDL.Func(
        [IDL.Text, IDL.Nat, IDL.Nat],
        [IDL.Vec(Item)],
        ['query'],
      ),
    'get_items_by_user' : IDL.Func([IDL.Principal], [IDL.Vec(Item)], ['query']),
    'get_items_count_by_type' : IDL.Func([IDL.Text], [IDL.Nat], ['query']),
    'get_license_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_licenses_by_item' : IDL.Func([IDL.Nat], [IDL.Vec(License)], ['query']),
    'get_my_favorites' : IDL.Func([], [IDL.Vec(Favorite)], []),
    'get_my_licenses' : IDL.Func([], [IDL.Vec(License)], []),
    'get_my_onchain_records' : IDL.Func([], [IDL.Vec(OnChainRecord)], []),
    'get_my_profile' : IDL.Func([], [IDL.Opt(User)], []),
    'get_onchain_record' : IDL.Func(
        [IDL.Nat],
        [IDL.Opt(OnChainRecord)],
        ['query'],
      ),
    'get_pending_transactions' : IDL.Func([], [IDL.Vec(Transaction)], []),
    'get_platform_config' : IDL.Func([], [PlatformConfig], ['query']),
    'get_platform_fee' : IDL.Func([IDL.Nat], [IDL.Nat], ['query']),
    'get_platform_wallet' : IDL.Func([], [IDL.Opt(IDL.Principal)], ['query']),
    'get_platform_wallet_balance' : IDL.Func([], [IDL.Opt(IDL.Nat64)], []),
    'get_total_favorite_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_total_view_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_transaction_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_transactions_by_user' : IDL.Func(
        [IDL.Text],
        [IDL.Vec(Transaction)],
        [],
      ),
    'get_transfer_fee' : IDL.Func([], [IDL.Nat64], []),
    'get_trending_items' : IDL.Func(
        [IDL.Text, IDL.Nat],
        [IDL.Vec(Item)],
        ['query'],
      ),
    'get_unique_view_count' : IDL.Func([IDL.Nat], [IDL.Nat], ['query']),
    'get_user_count' : IDL.Func([], [IDL.Nat], ['query']),
    'get_user_icp_balance' : IDL.Func([IDL.Text], [IDL.Nat64], []),
    'get_user_profile' : IDL.Func([IDL.Principal], [IDL.Opt(User)], ['query']),
    'get_verification_stats' : IDL.Func(
        [],
        [IDL.Record({ 'verifiedRecords' : IDL.Nat, 'totalRecords' : IDL.Nat })],
        ['query'],
      ),
    'get_view_count' : IDL.Func([IDL.Nat], [IDL.Nat], ['query']),
    'get_views_by_item' : IDL.Func([IDL.Nat], [IDL.Vec(View)], ['query']),
    'has_received_topup' : IDL.Func([IDL.Principal], [IDL.Bool], ['query']),
    'is_favorited' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'is_item_verified' : IDL.Func([IDL.Nat], [IDL.Bool], ['query']),
    'list_item' : IDL.Func(
        [
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Nat,
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Text,
          IDL.Nat,
          IDL.Vec(IDL.Text),
          IDL.Text,
          IDL.Text,
          IDL.Text,
        ],
        [Result_1],
        [],
      ),
    'mark_transaction_completed' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'mark_transaction_failed' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'register_user' : IDL.Func([], [IDL.Bool], []),
    'remove_favorite' : IDL.Func([IDL.Nat], [IDL.Bool], []),
    'search_items' : IDL.Func([IDL.Text], [IDL.Vec(Item)], ['query']),
    'set_platform_wallet' : IDL.Func([IDL.Principal], [IDL.Bool], []),
    'top_up_user' : IDL.Func([], [Result], []),
    'transfer_platform_fees' : IDL.Func([], [Result], []),
    'update_user_profile' : IDL.Func(
        [
          IDL.Opt(IDL.Text),
          IDL.Opt(IDL.Text),
          IDL.Opt(IDL.Text),
          IDL.Opt(IDL.Nat),
        ],
        [IDL.Bool],
        [],
      ),
    'verify_item_content' : IDL.Func(
        [IDL.Nat],
        [VerificationResult],
        ['query'],
      ),
    'whoami' : IDL.Func([], [IDL.Principal], []),
  });
  return PromptMarketplace;
};
export const init = ({ IDL }) => { return [IDL.Principal]; };